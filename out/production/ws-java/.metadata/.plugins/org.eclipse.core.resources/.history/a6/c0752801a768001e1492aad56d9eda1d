package model.entities;

import model.exceptions.WithdrawException;

public class Account {
	private Integer accountNumber;
	private String accountHolder;
	private Double balance;
	private Double withdrawLimit;

	public Account(Integer accountNumber, String accountHolder, Double balance, Double withdrawLimit) {
		this.accountNumber = accountNumber;
		this.accountHolder = accountHolder;
		this.balance = balance;
		this.withdrawLimit = withdrawLimit;
	}

	public Integer getAccountNumber() {
		return accountNumber;
	}

	public String getAccountHolder() {
		return accountHolder;
	}

	public Double getBalance() {
		return balance;
	}

	public Double getWithdrawLimit() {
		return withdrawLimit;
	}

	public void withdraw(Double amount) {
		validateWithdraw(amount);
		
		balance -= amount;
	}
	
	private void validateWithdraw(Double amount) {
		if (amount > withdrawLimit) {
			throw new WithdrawException("Withdraw error: The amount exceeds withdraw limit.");
		} else if (amount > balance) {
			throw new WithdrawException("Withdraw error: Not enough balance to withdraw.");
		}
	}
	
}
