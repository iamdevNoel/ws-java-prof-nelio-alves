package boardgame;

public class Board {

	private Integer rows;
	private Integer columns;
	private Piece[][] pieces;
	
	public Board(Integer rows, Integer columns) {
		this.rows = rows;
		this.columns = columns;
		pieces = new Piece[rows][columns];
	}

	public Integer getRows() {
		return rows;
	}

	public void setRows(Integer rows) {
		this.rows = rows;
	}

	public Integer getColumns() {
		return columns;
	}

	public void setColumns(Integer columns) {
		this.columns = columns;
	}
	
	public Piece getPiece(Integer row, Integer column) {
		return pieces[row][column];
	}
	
	public Piece getPiece(Position position) {
		return pieces[position.getRow()][position.getColumn()];
	}
	
	public void placePiece(Piece piece, Position position) {
		pieces[position.getRow()][position.getColumn()] = piece;
		piece.position = position;
	}
	
	public boolean positionExists(Position position) {
		boolean result;
		if (position.getRow() < 8 && position.getColumn() < 8) {
			result = true;
		} else {
			result = false;
		}
		return result;
	}
	
	public boolean isThereAPiece(Position position) {
		boolean result;
		if (pieces[position.getRow()][position.getColumn()] != null) {
			result = true;
		} else {
			result = false;
		}
		return result;
	}
	
}
